// <auto-generated />
using System;
using GPorject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GPorject.Migrations
{
    [DbContext(typeof(PorjectContext))]
    [Migration("20190504232905_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("GPorject.Models.Classes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("FacultyID");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("ID");

                    b.ToTable("Classess");
                });

            modelBuilder.Entity("GPorject.Models.Exam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("ExercisesID");

                    b.Property<string>("Name");

                    b.Property<int>("SubjectID");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("ID");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("GPorject.Models.Exercise", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Name");

                    b.Property<string>("ProblemList");

                    b.Property<int>("SubjectID");

                    b.Property<int>("Type");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("ID");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GPorject.Models.Faculty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("ID");

                    b.ToTable("Facultys");
                });

            modelBuilder.Entity("GPorject.Models.KnowledgePoint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Describe");

                    b.Property<int>("FacultyID");

                    b.Property<string>("Name");

                    b.Property<int>("SpecialtyID");

                    b.Property<int>("SubjectID");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("ID");

                    b.ToTable("KnowledgePoints");
                });

            modelBuilder.Entity("GPorject.Models.Problem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answer");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Describe");

                    b.Property<int>("KnowledgePointID");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("ID");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("GPorject.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleName");

                    b.Property<string>("RouteList");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GPorject.Models.Route", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RouteName");

                    b.HasKey("ID");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("GPorject.Models.Specialty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("FacultyID");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("ID");

                    b.ToTable("Specialtys");
                });

            modelBuilder.Entity("GPorject.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClassesID");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("FacultyID");

                    b.Property<string>("Name");

                    b.Property<int>("SpecialtyID");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("GPorject.Models.Subject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("FacultyID");

                    b.Property<string>("Name");

                    b.Property<int>("SpecialtyID");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("ID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("GPorject.Models.Teacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("FacultyID");

                    b.Property<string>("Name");

                    b.Property<int>("SpecialtyID");

                    b.Property<int>("SubjectID");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("GPorject.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<int>("Role");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
